concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha
    }}
jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: setup-java-test
      name: Set up Java ${{ matrix.test-java-version }} for tests
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.test-java-version }}
    - continue-on-error: true
      id: setup-java
      name: Set up Java for build
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        RUN_JMH_BASED_TESTS: ${{ matrix.jmh-based-tests }}
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: 'build

          ${{ matrix.coverage && ''jacocoTestReport'' || '''' }}

          -PtestJavaVersion=${{ matrix.test-java-version }}

          -Porg.gradle.java.installations.paths=${{ steps.setup-java-test.outputs.path
          }},${{ steps.setup-java.outputs.path }}

          '
    - continue-on-error: true
      if: ${{ !startsWith(github.ref_name, 'release/') && !startsWith(github.base_ref,
        'release/') }}
      name: Check for diff
      run: "# need to \"git add\" in case any generated files did not already exist\n\
        git add docs/apidiffs\nif git diff --cached --quiet\nthen \n  echo \"No diff\
        \ detected.\"\nelse \n  echo \"Diff detected - did you run './gradlew jApiCmp'?\"\
        \n  echo $(git diff --cached --name-only)\n  echo $(git diff --cached)\n \
        \ exit 1\nfi\n"
    - continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      if: ${{ matrix.coverage }}
      uses: codecov/codecov-action@v4
    - continue-on-error: true
      if: ${{ matrix.coverage }}
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: all/build/reports/jacoco/test/html
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - os: macos-latest
          test-java-version: 8
        - os: macos-13
          test-java-version: 11
        - os: macos-13
          test-java-version: 17
        - os: macos-13
          test-java-version: 21
        include:
        - coverage: true
          jmh-based-tests: true
          os: ubuntu-20.04
          test-java-version: 21
        os:
        - macos-latest
        - macos-13
        - ubuntu-latest
        test-java-version:
        - 8
        - 11
        - 17
        - 21
  build-graal:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: graalvm/setup-graalvm@v1
      with:
        components: native-image
        distribution: graalvm
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: '21'
    - continue-on-error: true
      name: Running test
      run: 'echo "GRAALVM_HOME: $GRAALVM_HOME"

        echo "JAVA_HOME: $JAVA_HOME"

        java --version

        native-image --version

        ./gradlew nativeTest

        '
  markdown-link-check:
    if: ${{ !startsWith(github.ref_name, 'release/') }}
    uses: ./.github/workflows/reusable-markdown-link-check.yml
  misspell-check:
    if: ${{ !startsWith(github.ref_name, 'release/') }}
    uses: ./.github/workflows/reusable-misspell-check.yml
  publish-snapshots:
    name: publish-snapshots${{ (github.ref_name != 'main' || github.repository !=
      'open-telemetry/opentelemetry-java') && ' (skipped)' || '' }}
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: setup-java
      name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      env:
        GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      if: ${{ github.ref_name == 'main' && github.repository == 'open-telemetry/opentelemetry-java'
        }}
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: assemble publishToSonatype
  required-status-check:
    if: always()
    needs:
    - build
    - build-graal
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: 'needs.build.result != ''success'' ||

        needs.build-graal.result != ''success''

        '
      run: exit 1
name: Build
on:
  repository_dispatch:
    types: trigger-ga___build.yml
